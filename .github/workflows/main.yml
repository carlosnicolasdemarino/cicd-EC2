name: Template v2.0

on:
  push:
    branches: [ "main","develop" ]
  pull_request:
    branches: [ "main","develop" ]

  workflow_dispatch:


env:
  DATABASE_HOST: ${{secrets.SERVER_REMOTE}}
  DATABASE_NAME: ${{secrets.SERVER_DB_NAME}}
  DATABASE_USERNAME: ${{secrets.SERVER_DB_USERNAME}}
  DATABASE_PASSWORD:  ${{secrets.SERVER_DB_PASSWORD}}
  DATABASE_SCRIPT: 'script.sql'
 

jobs:
  Import_SQL:
    runs-on: ubuntu-latest
    name: MySQL Deploy to RDS
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Import SQL Script
        run: |
              mysql --host=$DATABASE_HOST --user=$DATABASE_USERNAME --password=$DATABASE_PASSWORD --database $DATABASE_NAME < $DATABASE_SCRIPT

  Deploy_staging:
    name: Deploy Staging
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    #environment: 
    #  name: staging
    #  url:
    needs: [Import_SQL]
    steps:
      - name: Checkout the files
        uses: actions/checkout@v2
      - name: Deploy to Server EC2
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./
          remote: /var/www/html/
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
          rmRemote: true

#  Deploy_production:
#    name: Deploy Production
#    if: github.ref == 'refs/heads/main'
#    runs-on: ubuntu-latest
    #environment: 
    #  name: production
    #  url:
#    needs: [Deploy_staging]
#    steps:
#      - name: Checkout the files
#        uses: actions/checkout@v2
#      - name: Deploy to Server 1
#        uses: easingthemes/ssh-deploy@main
#        env:
#          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY_PRODUCTION }}
#          REMOTE_HOST: ${{ secrets.HOST_DNS_PRODUCTION }}
#          REMOTE_USER: ${{ secrets.USERNAME_PRODUCTION }}
#          TARGET: ${{ secrets.TARGET_DIR_PRODUCTION }}
